/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/ext_power.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>

#define COMBO_TIMEOUT 60
#define COLEMAK 0
#define QWERTY  1
#define NUMBERS 2
#define NAVIG   3
#define CONFIG  4

/ {
    macros {
        next_snippet: next_snippet {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp COLON &kp N &kp X>;
            label = "NEXT_SNIPPET";
        };
    };
};

/ {
    combos {
        compatible = "zmk,combos";

        combo_del {
            timeout-ms = <COMBO_TIMEOUT>;
            key-positions = <11 12 13>;
            bindings = <&mt RALT DEL>;
        };

        combo_cw {
            timeout-ms = <COMBO_TIMEOUT>;
            key-positions = <2 3 4>;
            bindings = <&caps_word>;
        };

        combo_tab {
            timeout-ms = <COMBO_TIMEOUT>;
            key-positions = <10 11 12>;
            bindings = <&mt K_CONTEXT_MENU TAB>;
        };

        combo_row {
            timeout-ms = <COMBO_TIMEOUT>;
            key-positions = <12 13 14>;
            bindings = <&kp LS(HOME)>;
        };

        combo_esc {
            timeout-ms = <COMBO_TIMEOUT>;
            key-positions = <0 1 2>;
            bindings = <&kp ESC>;
        };

        combo_ctlbksp {
            timeout-ms = <COMBO_TIMEOUT>;
            key-positions = <6 7 8>;
            bindings = <&kp LC(BSPC)>;
        };

        combo_bksp {
            timeout-ms = <COMBO_TIMEOUT>;
            key-positions = <16 17 18>;
            bindings = <&kp BSPC>;
        };
    };
};

&caps_word { continue-list = <UNDERSCORE MINUS BACKSPACE DELETE HOME END LEFT RIGHT>; };

&kscan0 { debounce-period = <20>; };

/ {
    behaviors {
        bh: layer_taps {
            compatible = "zmk,behavior-hold-tap";
            label = "Layer-Tap";
            #binding-cells = <2>;
            tapping_term_ms = <215>;
            flavor = "tap-preferred";
            bindings = <&mo>, <&kp>;
        };

        hm: homerow_mods {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODS";
            #binding-cells = <2>;
            tapping-term-ms = <170>;
            quick_tap_ms = <0>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;
        };

        sm: shift_mods {
            compatible = "zmk,behavior-hold-tap";
            label = "SHIFT_MODS";
            #binding-cells = <2>;
            tapping-term-ms = <170>;
            quick_tap_ms = <0>;
            flavor = "hold-preferred";
            bindings = <&kp>, <&kp>;
        };

        bkspc_del: bkspc_del {
            compatible = "zmk,behavior-mod-morph";
            label = "BKSPC_DEL";
            bindings = <&kp BACKSPACE>, <&kp DELETE>;

            #binding-cells = <0>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };
    };
};

/ {
    keymap {
        compatible = "zmk,keymap";

        colemak_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BKSP |
            // | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
            // | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ESC  |
            //                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |

            bindings = <
&kp LCTRL      &kp Q  &kp W  &kp F      &kp P               &kp G        &kp J    &kp L                &kp U      &kp Y    &kp SEMI  &bkspc_del
&kp TAB        &kp A  &kp R  &kp S      &kp T               &kp D        &kp H    &kp N                &kp E      &kp I    &kp O     &kp SQT
&kp BACKSLASH  &kp Z  &kp X  &kp C      &kp V               &kp B        &kp K    &kp M                &kp COMMA  &kp DOT  &kp FSLH  &kp MINUS
                             &kp GRAVE  &lt 2 LEFT_BRACKET  &kp SPACE    &kp RET  &lt 3 RIGHT_BRACKET  &kp EQUAL
            >;

            label = "COLEMAK";
        };

        qwerty_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BKSP |
            // | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
            // | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ESC  |
            //                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |

            bindings = <
&kp ESCAPE     &kp Q  &kp W  &kp E      &kp R               &kp T        &kp Y    &kp U                &kp I      &kp O    &kp P     &bkspc_del
&kp TAB        &kp A  &kp S  &kp D      &kp F               &kp G        &kp H    &kp J                &kp K      &kp L    &kp SEMI  &kp SQT
&kp BACKSLASH  &kp Z  &kp X  &kp C      &kp V               &kp B        &kp N    &kp M                &kp COMMA  &kp DOT  &kp FSLH  &kp MINUS
                             &kp GRAVE  &lt 2 LEFT_BRACKET  &kp SPACE    &kp RET  &lt 3 RIGHT_BRACKET  &kp EQUAL
            >;

            label = "QWERTY";
        };

        numbers_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | BKSP |
            // | BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |   | LFT | DWN |  UP | RGT |     |      |
            // | SHFT |     |     |     |     |     |   |     |     |     |     |     |      |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&kp ESCAPE  &none                 &none  &none          &none   &none        &kp N7   &kp N8    &kp N9      &kp KP_MINUS  &kp KP_DOT             &kp BSPC
&kp TAB     &none                 &none  &none          &none   &none        &kp N4   &kp N5    &kp N6      &kp KP_PLUS   &kp KP_MULTIPLY        &none
&caps_word  &kp LEFT_PARENTHESIS  &none  &none          &none   &none        &kp N1   &kp N2    &kp N3      &kp KP_EQUAL  &kp RIGHT_PARENTHESIS  &none
                                         &next_snippet  &trans  &kp SPACE    &kp RET  &lt 4 N0  &kp KP_DOT
            >;

            label = "Numbers";
        };

        navig_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | BKSP |
            // | CTRL |     |     |     |     |     |   |  -  |  =  |  [  |  ]  |  \  |  `   |
            // | SHFT |     |     |     |     |     |   |  _  |  +  |  {  |  }  | "|" |  ~   |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&kp F1                  &kp F2              &kp F3              &kp F4                    &kp F5             &kp F6               &kp F7             &kp F8          &kp F9          &kp F10          &kp F11        &kp F12
&kp LC(UP_ARROW)        &kp LC(DOWN_ARROW)  &kp LS(LC(LG(N1)))  &kp LS(LC(LG(NUMBER_2)))  &kp LS(LC(LG(C)))  &kp LC(LS(TAB))      &kp LC(TAB)        &kp HOME        &kp UP_ARROW    &kp END          &kp PAGE_UP    &kp GRAVE
&kp LC(LA(LEFT_ARROW))  &kp LS(LC(LG(A)))   &kp LS(LC(LG(R)))   &kp LS(LC(LG(S)))         &kp LS(LC(LG(T)))  &kp LS(LC(LG(D)))    &kp LS(LC(LG(F)))  &kp LEFT_ARROW  &kp DOWN_ARROW  &kp RIGHT_ARROW  &kp PAGE_DOWN  &kp LC(LA(RIGHT_ARROW))
                                                                &none                     &mo 4              &kp SPACE            &kp RET            &trans          &none
            >;

            label = "Navigation";
        };

        danger_layer {
            bindings = <
&bootloader  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4    &none  &ext_power EP_TOG  &kp C_BRI_DN       &none             &kp C_BRI_UP     &bootloader
&bt BT_CLR   &none         &none         &none         &none         &none           &to 1  &none              &kp C_VOLUME_DOWN  &kp C_MUTE        &kp C_VOLUME_UP  &none
&sys_reset   &none         &none         &none         &none         &none           &to 0  &out OUT_TOG       &kp C_PREV         &kp C_PLAY_PAUSE  &kp C_NEXT       &sys_reset
                                         &none         &trans        &none           &none  &trans             &none
            >;

            label = "**DANGER**";
        };
    };
};
